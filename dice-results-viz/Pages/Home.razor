@page "/"
@rendermode InteractiveWebAssembly
@using Dice.RollCodeParser
@using Dice.RollCodeParser.RollDescription
@using Result = Dice.RollCodeParser.RollDescription.Result
<PageTitle>Dice</PageTitle>

<h1>Dice Results Visualizer</h1>

<form method="post" @onsubmit="ParseDice" @formname="dice-form">
    <AntiforgeryToken/>
    <div>
        <label>
            Dice Notation:
            <InputText @bind-Value="UserInput!.Input"/>
        </label>
    </div>
    <div>
        <button type="submit">Evaluate</button>
    </div>
</form>

<hr/>
<div class=results id="resultGraph">
    <ApexChart @ref="_chart" Title="Result" TItem="Result" Options="_options">
        <ApexPointSeries TItem="Result"
                         Items="SResults"
                         Name="Odds"
                         SeriesType="SeriesType.Bar"
                         XValue="e => e.FaceValue"
                         YValue="e=> e.Odds*100"
        />
    </ApexChart>
</div>

@code {
    public DiceUserInput? UserInput { get; set; }
    public List<Result> SResults;
    private ApexChart<Result> _chart;
    private ApexChartOptions<Result> _options;
    protected override void OnInitialized()
    {
        UserInput = new DiceUserInput();
        if (UserInput.Input == null)
        {
           return;
        }

        _options = new ApexChartOptions<Result>()
        {
            Theme = new Theme()
            {
                Mode = Mode.Dark,
                Palette = PaletteType.Palette9
            }
        };
    }

    private async Task ParseDice()
    {
        if (UserInput == null || UserInput.Input == null)
        {
            return;
        }
        
        var rc = new RollCode(UserInput.Input);
        //if rc.HasError...
        SResults = rc.Result.GetResults();
        StateHasChanged();
        await _chart.RenderAsync();
    }

    public class DiceUserInput
    {
        public string? Input;
    }
}